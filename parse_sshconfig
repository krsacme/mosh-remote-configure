#!/usr/bin/env python3

import os
import sys

SSH_CONFIG = ".ssh/config"

# config dict format
# item[host] = {'hostname': '<hostname>', 'user': '<user>', 'private_key_file': '<file_path>'}

def main(host):
    home = os.path.expanduser("~")
    ssh_config_path = os.path.join(home, SSH_CONFIG)
    if os.path.exists(ssh_config_path):
        content = ''
        with open(ssh_config_path) as f:
            content = f.read()
        configs = parse_ssh_config(content)
        if host in configs.keys():
            print(configs[host])
            with open('hosts', 'w') as f:
                f.write('[all]\n')
                f.write('%s ansible_ssh_user=%s\n' % (configs[host]['hostname'], configs[host]['user']))


def parse_ssh_config(content):
    lines = content.split('\n')
    current_host = None
    data = {}
    for line in lines:
        line = line.strip()
        if 'Host ' in line:
            current_host = line.split(' ')[1]
            data[current_host] = {}
        if 'Hostname ' in line:
            data[current_host]['hostname'] = line.split(' ')[1]
        if 'User ' in line:
            data[current_host]['user'] = line.split(' ')[1]
        if 'IdentityFile ' in line:
            data[current_host]['private_key_file'] = line.split(' ')[1]
    return data


if __name__ == "__main__":
    args = sys.argv[1:]
    if len(args) != 1:
        print("One argument (.ssh/config host) is expected")
        sys.exit(1)
    main(args[0])
